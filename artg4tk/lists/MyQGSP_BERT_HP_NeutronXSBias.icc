#include <iomanip>
#include <stdlib.h>

#include "Geant4/G4ParticleTable.hh"
#include "Geant4/G4ParticleTypes.hh"
#include "Geant4/G4ProcessManager.hh"
#include "Geant4/G4ProcessVector.hh"
#include "Geant4/G4ios.hh"
#include "Geant4/globals.hh"

#include "Geant4/G4Material.hh"
#include "Geant4/G4MaterialTable.hh"

#include "Geant4/G4DecayPhysics.hh"
#include "Geant4/G4EmStandardPhysics.hh"
#include "Geant4/G4IonPhysics.hh"
#include "Geant4/G4RadioactiveDecayPhysics.hh"

#include "Geant4/G4EmExtraPhysics.hh"
#include "Geant4/G4StoppingPhysics.hh"
#include "MyG4HadronPhysicsQGSP_BERT_HP_NeutronXSBias.hh"

#include "Geant4/G4HadronElasticPhysicsHP.hh"

template<class T> TMyQGSP_BERT_HP_NeutronXSBias<T>::TMyQGSP_BERT_HP_NeutronXSBias(G4int ver)
: T(),
  NEUTRON_INXS_SCALE(std::getenv("NEUTRON_INXS_SCALE"))
{
  G4cout << "<<< Geant4 Physics List simulation engine: MyQGSP_BERT_HP_NeutronXSBias 3.0" << G4endl;
  G4cout << G4endl << G4endl;

  this->defaultCutValue = 0.7 * CLHEP::mm;
  this->SetVerboseLevel(ver);

  INXS_SCALE = (NEUTRON_INXS_SCALE ? strtod(NEUTRON_INXS_SCALE, 0) : 1.0 );
  G4cout << "<<< Neutron  inelastic XS scale factor : " << INXS_SCALE << std::endl;

  // EM Physics
  this->RegisterPhysics(new G4EmStandardPhysics(ver));

  // Synchroton Radiation & GN Physics
  this->RegisterPhysics(new G4EmExtraPhysics(ver));

  // Decays
  this->RegisterPhysics(new G4DecayPhysics(ver));

  // Hadron Elastic scattering
  this->RegisterPhysics(new G4HadronElasticPhysicsHP(ver));

  // Hadron Physics
  //<--this->RegisterPhysics( new G4HadronPhysicsQGSP_BERT_HP(ver));
  //-->this->RegisterPhysics( new MyG4HadronPhysicsQGSP_BERT_HP_NeutronXSBias("hInelastic_bias MyQGSP_BERT_HP_NeutronXSBias",true,2.0));
  //this->RegisterPhysics( new MyG4HadronPhysicsQGSP_BERT_HP_NeutronXSBias("hInelastic_bias MyQGSP_BERT_HP_NeutronXSBias",true,0.5));
  this->RegisterPhysics( new MyG4HadronPhysicsQGSP_BERT_HP_NeutronXSBias("hInelastic_bias MyQGSP_BERT_HP_NeutronXSBias", true, INXS_SCALE));

  // Stopping Physics
  this->RegisterPhysics(new G4StoppingPhysics(ver));

  // Ion Physics
  this->RegisterPhysics(new G4IonPhysics(ver));
}

template <class T>
void
TMyQGSP_BERT_HP_NeutronXSBias<T>::SetCuts()
{
  if (this->verboseLevel > 1) {
    G4cout << "MyQGSP_BERT_HP_NeutronXSBias::SetCuts: \n";
  }
  //  " G4VUserPhysicsList::SetCutsWithDefault" method sets
  //   the default cut value for all particle types

  this->SetCutsWithDefault();

  // Set proton cut value to 0 for producing low energy recoil nucleus
  this->SetCutValue(0, "proton");

  if (this->verboseLevel > 0)
    G4VUserPhysicsList::DumpCutValuesTable();
}

// 2019 by D. Rivera
